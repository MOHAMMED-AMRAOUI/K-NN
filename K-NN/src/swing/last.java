/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swing;

import KNN.Distances;
import KNN.FileToList;
import KNN.Instance;
import KNN.Prediction;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

/**
 *
 * @author AMRAOUI
 */
public class last extends javax.swing.JFrame {

    /**
     * Creates new form last
     */
    public last() {
        initComponents();
        
        Color cr =new Color(249, 235, 200);
        getContentPane().setBackground(cr);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        ko = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        afficher = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setBackground(new java.awt.Color(173, 139, 115));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Méthode de la racine carrée");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("K Optimal est :");

        afficher.setColumns(20);
        afficher.setRows(5);
        jScrollPane1.setViewportView(afficher);

        jButton2.setBackground(new java.awt.Color(173, 139, 115));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Retour");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(ko, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                            .addComponent(ko, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(105, 105, 105))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        
        
        String chemin ="src\\KNN\\weather.nominal.arff";  // chemin du corpus
        FileToList fichier=new FileToList(chemin);
        Distances distances=new Distances();
        List<Instance> listeInstances = fichier.lireFichier();
        Collections.shuffle(listeInstances);
        List<Instance> listApprentissage =new ArrayList<Instance>();
        List<Instance> listTest =new ArrayList<Instance>();
        double pourcentage=0.8;
        int nombreErreur=0,i,k;
        int trainSize=(int) Math.round(listeInstances.size()*pourcentage);
        int TestSize=listeInstances.size()-trainSize;
        System.out.println("Affichage des instances d'Apprentissage :");
        for(i=0;i<trainSize;i++){
            listApprentissage.add(new Instance(listeInstances.get(i).attributs,listeInstances.get(i).valuesClass));
            System.out.println(Arrays.asList(listApprentissage.get(i).attributs)+" "+listApprentissage.get(i).valuesClass);
        }

        for(i=trainSize;i<listeInstances.size();i++){
            listTest.add(new Instance(listeInstances.get(i).attributs,listeInstances.get(i).valuesClass));
        }
        System.out.println("\n Affichage des instances de Test :");
        for(int j=0;j<listTest.size();j++){
            System.out.println(Arrays.asList(listTest.get(j).attributs)+" "+listTest.get(j).valuesClass);
        }

        //*** Appliquer KNN pour toutes les instances du test pour k egal à racine de n ***
        for(i=0;i<listTest.size();i++){
            List<Distances> listeResultats=distances.calculeDistance(listApprentissage, listTest.get(i).attributs);
            String resultat=distances.classeInstance(listeResultats,(int) Math.sqrt(listApprentissage.size()));
            if(!resultat.equals(listTest.get(i).valuesClass)){
                // System.out.println("la calculation des distances n'est pas optimal");
                nombreErreur++;
            }else continue;
        }
        int kOptimale=(int) Math.sqrt(listApprentissage.size());
        ko.setText(Integer.toString(kOptimale));
        



        System.out.println("\n");
        int[][] mat= new int[2][2];
        mat = Prediction.Matrix(listApprentissage,listTest,(int) Math.sqrt(listApprentissage.size()));
        System.out.println();
        System.out.println("------------------------------------------------");
        System.out.println(" La matrice de confision :");
        for(int j=0;j<2;j++) {
            for(int r=0;r<2;r++) {
                System.out.print("|"+mat[j][r]+"\t"+"|");
            }
            System.out.println("\n");
        }
         String mat1 = Integer.toString(mat[0][0]);
        String mat2 = Integer.toString(mat[0][1]);
        String mat3 = Integer.toString(mat[1][0]);
        String mat4 = Integer.toString(mat[1][1]);

        double x= Prediction.Exactitude(mat, listTest.size());
        System.out.println("l'exactitude est : "+ x);
        System.out.println("\n");
        double y=Prediction.Précision(mat,0);
        System.out.println("la precision de la classe 1 est : "+ y);
        double y1=Prediction.Précision(mat,1);
        System.out.println("la precision de la classe 2 est : "+ y1);
        System.out.println("\n");
        double z=Prediction.Rappel(mat,0);
        System.out.println("le rappel de la classe 1 est : "+ z);
        double z1=Prediction.Rappel(mat,1);
        System.out.println("le rappel de la classe 2 est : "+ z1);
        System.out.println("\n");
        double f= Prediction.F_mesure(y, z);
        System.out.println("la f mesure de la classe 1 est : "+ f);
        double f1= Prediction.F_mesure(y1, z1);
        System.out.println("la f mesure de la classe 2 est : "+ f1);  
        
        
        afficher.setText("-----------------------------------------------------------------------------------------"+"\n\n"+"l'exactitude est : "+String.valueOf(x)+"\n"
+"\nla precision de la classe 1 est : "+String.valueOf(y)+"\n"
+"la precision de la classe 2 est : "+String.valueOf(y1)+"\n\n"
+"le rappel de la classe 1 est : "+String.valueOf(z)+"\n"
+"le rappel de la classe 2 est : "+String.valueOf(z1)+"\n\n"
+"la f mesure de la classe 1 est : "+String.valueOf(f)+"\n"
+"la f mesure de la classe 2 est : "+ String.valueOf(f1)+"\n\n"
+"\n"+"========> La matrice de confision <========="+"\n"+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "
        +" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+mat1+" "+" "+" "+"|"+" "+" "+" "+mat2+"\n"+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "
        +" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+" "+mat3+" "+" "+" "+"|"+" "+" "+" "+mat4+"\n");


// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed



new second().setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(last.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(last.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(last.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(last.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new last().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea afficher;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel ko;
    // End of variables declaration//GEN-END:variables
}
